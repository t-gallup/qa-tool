"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/openai-helper.ts":
/*!************************************!*\
  !*** ./src/utils/openai-helper.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateQuestionsAndAnswers: () => (/* binding */ generateQuestionsAndAnswers)\n/* harmony export */ });\nconst MAX_TOKENS = 200000; // Adjust this based on the API's actual limit\nconst chunkText = (text, maxTokens)=>{\n    const words = text.split(' ');\n    const chunks = [];\n    let currentChunk = '';\n    for (const word of words){\n        if ((currentChunk + word).length > maxTokens) {\n            chunks.push(currentChunk.trim());\n            currentChunk = word + ' ';\n        } else {\n            currentChunk += word + ' ';\n        }\n    }\n    if (currentChunk) {\n        chunks.push(currentChunk.trim());\n    }\n    return chunks;\n};\nconst generateQuestionsAndAnswers = async (file)=>{\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject)=>{\n        fileReader.onload = async (e)=>{\n            var _e_target;\n            const text = (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result;\n            try {\n                const chunks = chunkText(text, MAX_TOKENS);\n                const allResponses = [];\n                for (const chunk of chunks){\n                    const response = await fetch('/api/generateQA', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            fileContent: chunk\n                        })\n                    });\n                    if (!response.ok) {\n                        throw new Error('Failed to generate Q&A');\n                    }\n                    const qaResults = await response.json();\n                    allResponses.push(...qaResults);\n                }\n                resolve(allResponses);\n            } catch (error) {\n                reject(error);\n            }\n        };\n        fileReader.readAsText(file);\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvb3BlbmFpLWhlbHBlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsYUFBYSxRQUFRLDhDQUE4QztBQUV6RSxNQUFNQyxZQUFZLENBQUNDLE1BQWNDO0lBQy9CLE1BQU1DLFFBQVFGLEtBQUtHLEtBQUssQ0FBQztJQUN6QixNQUFNQyxTQUFtQixFQUFFO0lBQzNCLElBQUlDLGVBQWU7SUFFbkIsS0FBSyxNQUFNQyxRQUFRSixNQUFPO1FBQ3hCLElBQUksQ0FBQ0csZUFBZUMsSUFBRyxFQUFHQyxNQUFNLEdBQUdOLFdBQVc7WUFDNUNHLE9BQU9JLElBQUksQ0FBQ0gsYUFBYUksSUFBSTtZQUM3QkosZUFBZUMsT0FBTztRQUN4QixPQUFPO1lBQ0xELGdCQUFnQkMsT0FBTztRQUN6QjtJQUNGO0lBRUEsSUFBSUQsY0FBYztRQUNoQkQsT0FBT0ksSUFBSSxDQUFDSCxhQUFhSSxJQUFJO0lBQy9CO0lBRUEsT0FBT0w7QUFDVDtBQUVPLE1BQU1NLDhCQUE4QixPQUFPQztJQUNoRCxNQUFNQyxhQUFhLElBQUlDO0lBQ3ZCLE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztRQUMzQkosV0FBV0ssTUFBTSxHQUFHLE9BQU9DO2dCQUNaQTtZQUFiLE1BQU1sQixRQUFPa0IsWUFBQUEsRUFBRUMsTUFBTSxjQUFSRCxnQ0FBQUEsVUFBVUUsTUFBTTtZQUU3QixJQUFJO2dCQUNGLE1BQU1oQixTQUFTTCxVQUFVQyxNQUFNRjtnQkFDL0IsTUFBTXVCLGVBQWUsRUFBRTtnQkFFdkIsS0FBSyxNQUFNQyxTQUFTbEIsT0FBUTtvQkFDMUIsTUFBTW1CLFdBQVcsTUFBTUMsTUFBTSxtQkFBbUI7d0JBQzlDQyxRQUFRO3dCQUNSQyxTQUFTOzRCQUNQLGdCQUFnQjt3QkFDbEI7d0JBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQzs0QkFBRUMsYUFBYVI7d0JBQU07b0JBQzVDO29CQUVBLElBQUksQ0FBQ0MsU0FBU1EsRUFBRSxFQUFFO3dCQUNoQixNQUFNLElBQUlDLE1BQU07b0JBQ2xCO29CQUVBLE1BQU1DLFlBQVksTUFBTVYsU0FBU1csSUFBSTtvQkFDckNiLGFBQWFiLElBQUksSUFBSXlCO2dCQUN2QjtnQkFFQWxCLFFBQVFNO1lBQ1YsRUFBRSxPQUFPYyxPQUFPO2dCQUNkbkIsT0FBT21CO1lBQ1Q7UUFDRjtRQUVBdkIsV0FBV3dCLFVBQVUsQ0FBQ3pCO0lBQ3hCO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL3R5bGVyZ2FsbHVwL0RvY3VtZW50cy9xYS10b29sL3NyYy91dGlscy9vcGVuYWktaGVscGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1BWF9UT0tFTlMgPSAyMDAwMDA7IC8vIEFkanVzdCB0aGlzIGJhc2VkIG9uIHRoZSBBUEkncyBhY3R1YWwgbGltaXRcblxuY29uc3QgY2h1bmtUZXh0ID0gKHRleHQ6IHN0cmluZywgbWF4VG9rZW5zOiBudW1iZXIpID0+IHtcbiAgY29uc3Qgd29yZHMgPSB0ZXh0LnNwbGl0KCcgJyk7XG4gIGNvbnN0IGNodW5rczogc3RyaW5nW10gPSBbXTtcbiAgbGV0IGN1cnJlbnRDaHVuayA9ICcnO1xuXG4gIGZvciAoY29uc3Qgd29yZCBvZiB3b3Jkcykge1xuICAgIGlmICgoY3VycmVudENodW5rICsgd29yZCkubGVuZ3RoID4gbWF4VG9rZW5zKSB7XG4gICAgICBjaHVua3MucHVzaChjdXJyZW50Q2h1bmsudHJpbSgpKTtcbiAgICAgIGN1cnJlbnRDaHVuayA9IHdvcmQgKyAnICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnRDaHVuayArPSB3b3JkICsgJyAnO1xuICAgIH1cbiAgfVxuXG4gIGlmIChjdXJyZW50Q2h1bmspIHtcbiAgICBjaHVua3MucHVzaChjdXJyZW50Q2h1bmsudHJpbSgpKTtcbiAgfVxuXG4gIHJldHVybiBjaHVua3M7XG59O1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVRdWVzdGlvbnNBbmRBbnN3ZXJzID0gYXN5bmMgKGZpbGU6IEZpbGUpOiBQcm9taXNlPHsgcXVlc3Rpb246IHN0cmluZywgYW5zd2VyOiBzdHJpbmcgfVtdPiA9PiB7XG4gIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGZpbGVSZWFkZXIub25sb2FkID0gYXN5bmMgKGUpID0+IHtcbiAgICAgIGNvbnN0IHRleHQgPSBlLnRhcmdldD8ucmVzdWx0IGFzIHN0cmluZztcblxuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgY2h1bmtzID0gY2h1bmtUZXh0KHRleHQsIE1BWF9UT0tFTlMpO1xuICAgICAgICBjb25zdCBhbGxSZXNwb25zZXMgPSBbXTtcblxuICAgICAgICBmb3IgKGNvbnN0IGNodW5rIG9mIGNodW5rcykge1xuICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvZ2VuZXJhdGVRQScsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgZmlsZUNvbnRlbnQ6IGNodW5rIH0pLFxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZ2VuZXJhdGUgUSZBJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3QgcWFSZXN1bHRzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgIGFsbFJlc3BvbnNlcy5wdXNoKC4uLnFhUmVzdWx0cyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKGFsbFJlc3BvbnNlcyk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBmaWxlUmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7XG4gIH0pO1xufTsiXSwibmFtZXMiOlsiTUFYX1RPS0VOUyIsImNodW5rVGV4dCIsInRleHQiLCJtYXhUb2tlbnMiLCJ3b3JkcyIsInNwbGl0IiwiY2h1bmtzIiwiY3VycmVudENodW5rIiwid29yZCIsImxlbmd0aCIsInB1c2giLCJ0cmltIiwiZ2VuZXJhdGVRdWVzdGlvbnNBbmRBbnN3ZXJzIiwiZmlsZSIsImZpbGVSZWFkZXIiLCJGaWxlUmVhZGVyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJvbmxvYWQiLCJlIiwidGFyZ2V0IiwicmVzdWx0IiwiYWxsUmVzcG9uc2VzIiwiY2h1bmsiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZmlsZUNvbnRlbnQiLCJvayIsIkVycm9yIiwicWFSZXN1bHRzIiwianNvbiIsImVycm9yIiwicmVhZEFzVGV4dCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/openai-helper.ts\n"));

/***/ })

});